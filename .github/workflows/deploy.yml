name: Deploy to EC2

on:
  push:
    branches:
      - master

jobs:
  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: |
          docker build -t threadly-app-prod -f Dockerfile .

      - name: Save Docker image to tar file
        run: |
          docker save threadly-app-prod > threadly-app-prod.tar

      - name: Copy image to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: ${{ secrets.EC2_PORT }}
          source: "threadly-app-prod.tar"
          target: "~/threadly/threadly-app-prod.tar"

      - name: SSH and deploy on EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: ${{ secrets.EC2_PORT }}
          script: |
            cd ~/threadly
            docker load < threadly-app-prod.tar
            docker compose -f infra/docker-compose-prod.yml down
            docker compose -f infra/docker-compose-prod.yml up -d
#    steps:
#      - name: SSH into EC2 and deploy
#        uses: appleboy/ssh-action@v1.0.0
#        with:
#          host: ${{ secrets.EC2_HOST }}
#          username: ${{ secrets.EC2_USERNAME }}
#          key: ${{ secrets.EC2_SSH_KEY }}
#          port: ${{ secrets.EC2_PORT }}
#          script: |
#            cd ~/threadly
#            git pull origin master
#            ./gradlew build
#            docker compose -f infra/docker-compose-prod.yml down
#            docker compose -f infra/docker-compose.prod.yml up -d