name: CI

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 체크아웃
        uses: actions/checkout@v4

      - name: Buildx 설정
        uses: docker/setup-buildx-action@v3

      - name: 도커 이미지 빌드
        run: |
          docker build -t threadly-app-prod -f ./Dockerfile .

      - name: 도커 이미지 tar로 저장
        run: |
          rm -f threadly-app.tar
          docker save threadly-app-prod -o threadly-app.tar
          chmod 644 threadly-app.tar

      - name: deploy 생성
        run: |
          mkdir p deploy
          cp ./threadly-app.tar ./deploy
          cp ./infra/docker-compose.prod.yml ./deploy

      - name: Artifact 업로드
        uses: actions/upload-artifact@v4
        with:
          name: deploy
          path: ./deploy

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Artifact 다운로드
        uses: actions/download-artifact@v4
        with:
          name: deploy
          path: .

      - name: 디버깅
        run: |
          echo "현재 디렉토리: $(pwd)"
          echo "deploy 디렉토리 내용: 
          ls -al ./deploy
    


      - name: SCP 전송
        uses: appleboy/scp-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: ${{secrets.EC2_PORT }}
          source: |
            ./deploy
          target: "/home/ubuntu/threadly"
          tar_dereference: false

      - name: 배포
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: ${{ secrets.EC2_PORT }}
          script: |
            cd ~/threadly
            docker load -i ./deploy/threadly-app.tar
            docker compose -f ./deploy/docker-compose.prod.yml down
            docker compose -f ./deploy/docker-compose.prod.yml up -d
          






