services:
  postgresql:
    image: postgres:16
    container_name: postgresql
    restart: always
    environment:
      POSTGRES_DB: threadly
      POSTGRES_USER: threadly
      POSTGRES_PASSWORD: localpwd
    volumes:
      - /home/ubuntu/docker-volumes/postgres:/var/lib/postgresql/data
      - /home/ubuntu/threadly/logs/services/postgres:/var/log
    user: "999:999"
    ports:
      - "5432:5432"
    command: [ "postgres","-c","shared_buffers=128MB","-c","work_mem=4MB","-c","max_connections=80" ]
    mem_limit: 512m
    cpus: 0.5
    networks:
      - service-network
      - monitoring-network

  mongodb:
    container_name: mongodb-dev
    image: mongo:latest
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - /Users/gimgyubaeg/workspace/java/project/ecommerce/notification-service/infra/docker-volumes/mongo-dev/data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=notification
      - MONGO_INITDB_ROOT_PASSWORD=notification
    command: mongod --bind_ip_all
    networks:
      - service-network

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    volumes:
      - /home/ubuntu/docker-volumes/redis:/data
      - /home/ubuntu/threadly/logs/services/redis:/var/log
    user: "999:999"
    ports:
      - "6379:6379"
    command: [
      "redis-server",
      "--logfile", "/var/log/redis.log",
      "--maxmemory", "128mb",
      "--maxmemory-policy", "allkeys-lru"
    ]
    mem_limit: 160m
    networks:
      - service-network


networks:
  monitoring-network:
    external: true
  service-network:
    external: true
