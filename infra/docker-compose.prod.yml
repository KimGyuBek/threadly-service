services:
  app:
    image: kimgyubek/threadly-app:${IMAGE_TAG}
    container_name: threadly-app
    depends_on:
      - postgresql
      - redis
    working_dir: /app
    command: [ "java", "-jar", "threadly.jar" ]
    ports:
      - "8080:8080"
    env_file:
      - ./.env
    environment:
      TZ: "Asia/Seoul"
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    volumes:
      - /home/ubuntu/threadly/logs/services/app:/app/logs
    networks:
      - threadly-network

  postgresql:
    image: postgres:16
    container_name: postgresql
    restart: always
    environment:
      POSTGRES_DB: threadly
      POSTGRES_USER: threadly
      POSTGRES_PASSWORD: localpwd
    volumes:
      - /home/ubuntu/docker-volumes/postgres:/var/lib/postgresql/data
      - /home/ubuntu/threadly/logs/services/postgres:/var/log
    user: "999:999"
    ports:
      - "5432:5432"
    networks:
      - threadly-network

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    volumes:
      - /home/ubuntu/docker-volumes/redis:/data
      - /home/ubuntu/threadly/logs/services/redis:/var/log
    user: "999:999"
    ports:
      - "6379:6379"
    command: [ "redis-server", "--logfile", "/var/log/redis.log" ]
    networks:
      - threadly-network

  loki:
    image: grafana/loki:2.9.0
    container_name: loki
    ports:
      - "3100:3100"
    volumes:
      - ./loki-stack/loki/config.yml:/etc/loki/config.yml
      - /home/ubuntu/docker-volumes/loki/data:/tmp/loki
      - /home/ubuntu/docker-volumes/loki/wal:/wal
    command: -config.file=/etc/loki/config.yml
    networks:
      - threadly-network

  promtail:
    image: grafana/promtail:2.9.0
    container_name: promtail
    volumes:
      - /home/ubuntu/threadly/logs:/app/logs
      - /home/ubuntu/threadly/infra/loki-stack/promtail/config.yml:/etc/promtail/config.yml:ro
    command: -config.file=/etc/promtail/config.yml
    networks:
      - threadly-network

  grafana:
    image: grafana/grafana:10.0.3
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - loki
    environment:
      - GF_SERVER_HTTP_ADDR=0.0.0.0
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_PASSWORD=admin
    volumes:
      - /home/ubuntu/docker-volumes/grafana:/var/lib/grafana
    networks:
      - threadly-network

volumes:
  grafana-storage:

networks:
  threadly-network:
    driver: bridge
